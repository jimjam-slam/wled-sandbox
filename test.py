import asyncio
import time
from wled import WLED

# python-wled docs:
# https://github.com/frenck/python-wled/blob/main/src/wled/wled.py

async def main() -> None:
    """Show example on controlling your WLED device."""
    async with WLED("wled-test1.local") as led:
        print("Getting device info:")
        device = await led.update()
        print(device.info.version)

        # turn device off
        await led.master(on = False)
        print("Device off")

        time.sleep(2)

        # turn strip on, full brightness
        await led.master(on = True, brightness = 255)
        print("Device back on")

        time.sleep(2)


        # change segment
        # print("Trying effect")
        # await led.segment(0,
        #     brightness = 255,
        #     color_primary = [255, 0, 0],   # red
        #     color_secondary = [0, 255, 0], # blue
        #     color_tertiary = [0, 0, 255],  # green,
        #     effect = 4)

        # change individual colours
        print("Changing individual colours")
        await led.segment(0, transition = 0, individual = [
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            #
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0],
            [255, 0, 0],
            [0, 0, 0]
        ])


if __name__ == "__main__":
    asyncio.run(main())